{"uid":"f26eb9108a0e4082","name":"Send event with wrong data type for videoTime","fullName":"test.test_api_event.TestApiEvent#test_post_invalid_video_time","historyId":"abbcd9dd0e5c032cfcef704a23c6e32a","time":{"start":1753989754341,"stop":1753989754373,"duration":32},"status":"failed","statusMessage":"AssertionError: ❗ Expected validation error for bad 'videoTime', but got 200\nassert 200 >= 400\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <test_api_event.TestApiEvent object at 0x7fa53814f430>\n\n    @allure.title(\"Send event with wrong data type for videoTime\")\n    def test_post_invalid_video_time(self):\n        payload = {\n            \"userId\": \"user-123\",\n            \"type\": \"pause\",\n            \"videoTime\": \"not-a-number\",\n            \"timestamp\": datetime.utcnow().isoformat() + \"Z\"\n        }\n    \n        response = requests.post(BASE_URL, json=payload)\n        logger.info(f\"Invalid 'videoTime' type - Status: {response.status_code}\")\n>       assert response.status_code >= 400, (\n            \"❗ Expected validation error for bad 'videoTime', but got \"\n            f\"{response.status_code}\"\n        )\nE       AssertionError: ❗ Expected validation error for bad 'videoTime', but got 200\nE       assert 200 >= 400\nE        +  where 200 = <Response [200]>.status_code\n\ntest/test_api_event.py:55: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"start_server","time":{"start":1753989754340,"stop":1753989754340,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"feature","value":"POST /api/event"},{"name":"epic","value":"Backend API Validation"},{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_api_event"},{"name":"subSuite","value":"TestApiEvent"},{"name":"host","value":"pkrvmjbmru5nbw0"},{"name":"thread","value":"6189-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_api_event"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"f26eb9108a0e4082.json","parameterValues":[]}