{"name": "Send event with missing required fields", "status": "failed", "statusDetails": {"message": "AssertionError: ❗ Expected validation error for missing 'type', but got 200\nassert 200 >= 400\n +  where 200 = <Response [200]>.status_code", "trace": "self = <test_api_event.TestApiEvent object at 0x000002341242D880>\nmissing_field = 'type'\n\n    @allure.title(\"Send event with missing required fields\")\n    @pytest.mark.parametrize(\"missing_field\", [\"userId\", \"type\", \"videoTime\", \"timestamp\"])\n    def test_post_missing_fields(self, missing_field):\n        payload = {\n            \"userId\": \"user-123\",\n            \"type\": \"scroll\",\n            \"videoTime\": 3.2,\n            \"timestamp\": datetime.utcnow().isoformat() + \"Z\"\n        }\n        del payload[missing_field]\n    \n        response = requests.post(BASE_URL, json=payload)\n        logger.info(f\"Missing '{missing_field}' - Status: {response.status_code}\")\n>       assert response.status_code >= 400, (\n            f\"❗ Expected validation error for missing '{missing_field}', \"\n            f\"but got {response.status_code}\"\n        )\nE       AssertionError: ❗ Expected validation error for missing 'type', but got 200\nE       assert 200 >= 400\nE        +  where 200 = <Response [200]>.status_code\n\ntest_api_event.py:133: AssertionError"}, "parameters": [{"name": "missing_field", "value": "'type'"}], "start": 1753984503526, "stop": 1753984503539, "uuid": "760a3b6c-bd4a-417b-a8bc-4ebb10fb1ea8", "historyId": "a9f4d137bb431fd37e05d0e3fa6136ed", "testCaseId": "e675f131af55daa53d2385b8635c4960", "fullName": "test.test_api_event.TestApiEvent#test_post_missing_fields", "labels": [{"name": "feature", "value": "POST /api/event"}, {"name": "epic", "value": "Backend API Validation"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api_event"}, {"name": "subSuite", "value": "TestApiEvent"}, {"name": "host", "value": "EladSalti"}, {"name": "thread", "value": "55868-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api_event"}], "titlePath": ["test", "test_api_event.py", "TestApiEvent"]}